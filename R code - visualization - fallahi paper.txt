library(tidyverse)
library(hrbrthemes)
library(viridis)

q.c <- c(37.5, 37.5, 37.5, 37.5, 37.5,20.8,20.8,20.8,20.8,20.8, 20.8, 12.51, 12.51,12.51,12.51,12.51, 12.51)
q.d <-c(12.51, 7.5, 3.75, 1.88, 1.25,10.4, 6.93, 4.16, 2.08, 1.04, .693, 6.25, 4.17, 2.5, 1.25, 0.62, .41)

q.ratio <- c(3,5,10,20,30 , 2, 3, 5, 10, 20, 30, 2, 3, 5, 10, 20 , 30) # q.cont/q.disp
D <- c(1009, 910, 760, 600, 427, 930,820, 710, 600, 520, 460, 1030,800, 710, 640, 590, 510)
freq <- c(1.7, 2.5, 1.54, 1.57, 2,1.17, 1.26, 1.03, 0.92, 0.90,1.05, 0.52, .42, .79, .35,.34, .43)

my.data <- as_tibble(data.frame(q.cont = q.c, q.disp = q.d, q.ratio = q.ratio,
                diameter = D, frequency = freq))

my.data <- mutate(my.data, freq.category = c(5, 5, 4, 4, 4, 3, 3, 3,
                                  2, 2, 3, 2, 1, 2, 1, 1, 1)) # alaki
my.data$freq.category <- as.factor(my.data$freq.category)

my.data <- mutate(my.data, q.cont.category = c("Qc = 37.5 mL/ hr", "Qc = 37.5 mL/ hr","Qc = 37.5 mL/ hr",'Qc = 37.5 mL/ hr','Qc = 37.5 mL/ hr',
                                               'Qc = 20.8 mL/ hr','Qc = 20.8 mL/ hr','Qc = 20.8 mL/ hr','Qc = 20.8 mL/ hr','Qc = 20.8 mL/ hr','Qc = 20.8 mL/ hr',
                                              'Qc = 12.5 mL/ hr','Qc = 12.5 mL/ hr','Qc = 12.5 mL/ hr','Qc = 12.5 mL/ hr','Qc = 12.5 mL/ hr','Qc = 12.5 mL/ hr'
                                              ) )

# material properties , corn oil - water , reference in zotero, 
# Re= rho*Q*D/(miu*A) , water : dispersed, oil : continuous
oil.density <-  915.3 # kg/m3 , T = 22 C
oil.daynamicviscosity <- 59.2*10^(-3) # miu , Pa.s , T = 22 C
water.density <-  998.2 # kg/m3 , T = 20 C
water.daynamicviscosity <-  1.002*10^(-3) # miu, Pa.s, T = 20 C

channel.d <- 500*10^(-6) # m
channel.A <- 3.14*(channel.d^2)/4 # m2

my.data <- mutate(my.data, water.Re = water.density*(q.disp*10^(-6)/3600)*channel.d/(water.daynamicviscosity*channel.A))
my.data <- mutate(my.data, oil.Re = oil.density*(q.cont*10^(-6)/3600)*channel.d/(oil.daynamicviscosity*channel.A))
my.data <- mutate(my.data, Re.cont.category = as.factor(c('Re = 0.410', 'Re = 0.410','Re = 0.410','Re = 0.410','Re = 0.410',
                                                          'Re = 0.228','Re = 0.228','Re = 0.228','Re = 0.228','Re = 0.228','Re = 0.228',
                                                          'Re = 0.137','Re = 0.137','Re = 0.137','Re = 0.137','Re = 0.137','Re = 0.137')))
my.data <- mutate(my.data, Re.ratio = round(oil.Re/water.Re , digits = 2))

## now ggplot :)  , "at a glance" plot , IMPORTANT.
ggplot() +
  geom_point(data = my.data ,mapping = aes(x = q.ratio ,
                                           y = frequency,
                                           fill = q.cont.category ,
                                           size = diameter) ,
             alpha = .6,
             shape=21 ,
             color = "black") +
  geom_smooth(data = my.data[1:5, ] , 
              mapping = aes(x = Re.ratio*100 , y = frequency) ,
              se = FALSE ,
              size = .6 , linetype = 'dashed', color = "black",
              method = 'lm' , formula = y ~ poly(x,2)) +
  geom_smooth(data = my.data[6:11, ] , 
              mapping = aes(x = Re.ratio*100, y = frequency) ,
              se = FALSE,
              size = .6 , linetype = 'dashed', color = "black",
              method = 'lm' , formula = y ~ poly(x,3)) +
  geom_smooth(data = my.data[12:17, ] , 
              mapping = aes(x = Re.ratio*100, y = frequency) ,
              se = FALSE,
              size = .6 , linetype = 'dashed', color = "black",
              method = 'lm' , formula = y ~ poly(x,2)) +
  scale_size(range = c(1, 12)) +
  scale_fill_viridis(discrete=TRUE, begin = 1, end = .55, option = 'B') +
  labs(
       x = "    Volumetric Flow Rate\nRatio (%)" ,
       y = "Frequency of  Droplet  Production\n ( Number / Second )" ,
       fill = "      Flow Rate of the \nContinuous Phase (Qc)" ,
       size = "Diameter") +
  lims(y = c(-.5, 3),
       x = c(-.5, 35)) +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE ,axis_title_face = "bold")



# 'D - qratio plot' , IMPORTANT ......[fig 2]
ggplot() +
  geom_point(data = my.data, mapping = aes(x = q.ratio,
                                           y = diameter,
                                           shape = q.cont.category),
             size = 3) +
  geom_smooth(data = my.data, mapping = aes(x = q.ratio,
                                            y = diameter,
                                            group = q.cont.category),
              se = FALSE, size = .9 , color = "black", method = 'lm',
              position = position_dodge(width = .6))  +
  labs(
       x = "Volumetric Flow Ratio" ,
       y = "Droplet Diameter \n (micro meter)" ,
       shape = "") +
  lims(y = c(150, 1150),
       x = c(0, 35)) +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE , axis_title_face = "bold") +
  theme(legend.position = c(.75 , .95)) +
  geom_errorbar(data = my.data, 
                mapping = aes(x = q.ratio,
                              y = diameter,
                              group = q.cont.category,
                              ymin = diameter - sd(my.data$diameter),
                              ymax = diameter + sd(my.data$diameter)),
                width = 1.2,
                position = position_dodge(width = 1.1))





# ggplot , "freq-qratio" plot   , IMPORTANT ...... [fig3]
ggplot() +
  geom_point(data = my.data, mapping = aes(x = q.ratio,
                                           y = frequency,
                                           shape = q.cont.category),
             size = 3,
             position = position_dodge(width = 1.1)) +
  geom_smooth(data = my.data, mapping = aes(x = q.ratio,
                                            y = frequency,
                                            group = q.cont.category),
              se = FALSE, size = .9 , color = "black",
              position = position_dodge(width = 1.1)) +
  geom_errorbar(data = my.data, 
                mapping = aes(x = q.ratio,
                              y = frequency,
                              group = q.cont.category,
                              ymin = frequency - sd(my.data$frequency),
                              ymax = frequency + sd(my.data$frequency)),
                width = 1.7,
                position = position_dodge(width = 1.1)) +
  labs(
       x = "Volumetric Flow Ratio" ,
       y = "Frequency of Droplet Production \n (Number / Second)" ,
       shape = "") +
  lims(y = c(-.5, 4)) +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE , axis_title_face = "bold") +
  theme(legend.position = c(.75 , .95))


# freq by Reynolds of phases, oil as continuous
ggplot() +
  geom_point(data = my.data, mapping = aes(x = Re.ratio ,
                                           y = frequency,
                                           shape = Re.cont.category),
             size = 3,
             position = position_dodge(width = 0.21)) +
  geom_smooth(data = my.data, mapping = aes(x = Re.ratio ,
                                            y = frequency,
                                            group = Re.cont.category),
              se = FALSE, size = .9 , color = "black",
              position = position_dodge(width = 0.21),
              method = 'lm' , formula = y ~ poly(x,3)) +
  geom_errorbar(data = my.data, 
                mapping = aes(x = Re.ratio,
                              y = frequency,
                              group = Re.cont.category,
                              ymin = frequency - sd(my.data$frequency),
                              ymax = frequency + sd(my.data$frequency)),
                width = .3,
                position = position_dodge(width = 0.21)) +
  labs(
    x = "Reynolds Number Ratio \n (Continuous / Dispersed)" ,
    y = "Frequency of Droplet Production \n (Number / Second)" ,
    shape = "    Reynolds of \n Continuous phase") +
  lims(y = c(-.5, 3.5)) +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE , axis_title_face = "bold")



####grouping by "q.ratio" #### 
#data analysis with grouping by "q.ratio"
# violin diameter
my.data %>%
  group_by(q.ratio) %>%
  ggplot() +
  geom_violin(mapping = aes(x = q.ratio, y = diameter,
                            group = q.ratio))
# violin frequency >>> NOT GOOD
my.data %>%
  group_by(q.ratio) %>%
  ggplot() +
  geom_violin(mapping = aes(x = q.ratio, y = frequency,
                            group = q.ratio))

# scatter diameter  >>> IMPORTANT ........ alternative to  [fig 2]
ggplot(data = summarise(group_by(my.data, q.ratio),
                        mean = mean(diameter),
                        sd = sd(diameter)),
       mapping = aes(x = q.ratio,
                     y = mean)) +
  geom_point(mapping = aes(shape = as.factor(q.ratio)),
             size = 5 ) +
  scale_shape_manual(values = c(0, 1, 2, 15, 16, 17)) +
  geom_errorbar(mapping = aes(ymin = mean - sd,
                              ymax = mean + sd)) +
  geom_smooth(method = 'lm', se = FALSE,
              color = 'black') +
  labs(title = "Diameter Average" ,
       x = "Volumetric Flow Ratio " ,
       y = "Diameter  (micro meter)" ,
       shape = "Flow Ratio") +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE , axis_title_face = "bold") 



### diameter vs frequency >>> NOT GOOOD
ggplot(data = group_by(my.data, q.ratio), 
       mapping = aes(y = diameter,
                     x = frequency)) +
  geom_point(mapping = aes(shape = as.factor(q.ratio)))
  


#### Data Set 2 / Viability ####
my.data2 <- as_tibble(data.frame(time = c(0, 30, 60, 90, 120),
                       capsul = c(12.12, 11.08, 9.82, 8.45, 7.18 ),
                       error.capsul = c(.41, .34,.58, .08, .13),
                       non.capsul = c(12.43, 10.21, 8.16, 6.07, 3.87),
                       error.non.capsul = c(.63, .55, .37, .13, .26))) 
my.data3 <- as_tibble(data.frame(extrusion = c(8.13 , 3.34),# > mean(c(3.07, 2.88, 3.34,0, 1.02, 3.42, 2.05, 1.02, 2.61, 1.31))
                                 emulsion = c(8.13, 4.19),  # > mean(c(5.15, 5.01, 4.19, 3.30, 4.96, 5.59, 5.17, 4.78, 4.26, 3.76))
                                 # for this I have used data from table 3, [39 or? 31]
                                 time3 = c(0, 120)))      # from [31] & [39] of fallahi
my.data4 <- as_tibble(data.frame(spraydry = c(.1, .01, .005)*10*7/1,
                                 time4 = c(0, 60, 120)))
# my.data4 is in percentage !

colors <- c("Encapsulated"="#999999","Not Encapsulated"="#3591d1",
            "Extrusion"="#62c76b",'Emulsion'='#f04546', "Spray Dry"="#3591d1")


ggplot() +
  geom_point(data = my.data2, mapping = aes(x = time, y = capsul,
                                            shape = 'Encapsulated'),
             size = 5 ,
             position=position_jitter(width = .01, height = .5)) +
  geom_point(data = my.data2, mapping = aes(x = time, y = non.capsul,
                                            shape = 'Not Encapsulated'),
             size = 5,
             position=position_jitter(width = .01, height = .5)) +
  geom_smooth(data = my.data2, mapping = aes(x = time, y = capsul),
              method = 'lm', se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_smooth(data = my.data2, mapping = aes(x = time, y = non.capsul),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_point(data = my.data3, mapping = aes(x = time3, y= extrusion,
                                            shape = 'Extrusion'),
              size = 4,
             position=position_jitter(width = .01, height = .6)) +
  geom_point(data = my.data3, mapping = aes(x = time3, y= emulsion,
                                            shape = 'Emulsion'),
              size = 3,
             position=position_jitter(width = .01, height = .6)) +
  geom_point(data = my.data4, mapping = aes(x = time4, y= spraydry,
                                            shape = 'Spray Dry'),
              size = 3,
             position=position_jitter(width = .01, height = .6)) +
  geom_smooth(data = my.data3, mapping = aes(x = time3, y = extrusion),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_smooth(data = my.data3, mapping = aes(x = time3, y = emulsion),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_smooth(data = my.data4, mapping = aes(x = time4, y = spraydry),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  scale_shape_manual(values = c('Encapsulated' = 16,
                                'Not Encapsulated' = 1,
                                'Extrusion'=18,
                                'Emulsion'=17,
                                'Spray Dry'=15),
                     labels = c('Emulsion', 'Microfluidics',
                                'Extrusion','Non-capsulated',
                                'Spray Dry')) +
  labs(x = "Time (min) " ,
       y = "Survived  Probiotics  (log10)" ,
       shape = "  Method for \n Encapsulation") +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE , axis_title_face = "bold") +
  scale_x_continuous(breaks=seq(0,120,30))
                     




## viability graph, in PERCENT:
ggplot() +
  geom_point(data = my.data2, mapping = aes(x = time, y = capsul*100/capsul[1],
                                            shape = 'Encapsulated'),
             size = 5 ,
             position=position_jitter(width = .01, height = .5)) +
  geom_point(data = my.data2, mapping = aes(x = time, y = non.capsul*100/non.capsul[1],
                                            shape = 'Not Encapsulated'),
             size = 5,
             position=position_jitter(width = .01, height = .5)) +
  geom_smooth(data = my.data2, mapping = aes(x = time, y = capsul*100/capsul[1]),
              method = 'lm', se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_smooth(data = my.data2, mapping = aes(x = time, y = non.capsul*100/non.capsul[1]),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_point(data = my.data3, mapping = aes(x = time3, y= extrusion*100/extrusion[1],
                                            shape = 'Extrusion'),
             size = 4,
             position=position_jitter(width = .01, height = .6)) +
  geom_point(data = my.data3, mapping = aes(x = time3, y= emulsion*100/emulsion[1],
                                            shape = 'Emulsion'),
             size = 3,
             position=position_jitter(width = .01, height = .6)) +
  geom_point(data = my.data4, mapping = aes(x = time4, y= spraydry*100/spraydry[1],
                                            shape = 'Spray Dry'),
             size = 3,
             position=position_jitter(width = .01, height = .6)) +
  geom_smooth(data = my.data3, mapping = aes(x = time3, y = extrusion*100/extrusion[1]),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_smooth(data = my.data3, mapping = aes(x = time3, y = emulsion*100/emulsion[1]),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  geom_smooth(data = my.data4, mapping = aes(x = time4, y = spraydry*100/spraydry[1]),
              method = 'lm' , se = FALSE,
              color = 'black' , linetype = 'dashed') +
  scale_shape_manual(values = c('Encapsulated' = 16,
                                'Not Encapsulated' = 1,
                                'Extrusion'=18,
                                'Emulsion'=17,
                                'Spray Dry'=15),
                     labels = c('Emulsion', 'Microfluidics',
                                'Extrusion','Non-capsulated',
                                'Spray Dry')) +
  labs(x = "Time (min) " ,
       y = "Survived  Probiotics (%)" ,
       shape = "Experiment") +
  theme_ipsum(base_family = "serif", grid = FALSE,
              axis = TRUE , axis_title_face = "bold") +
  scale_x_continuous(breaks=seq(0,120,30))
  
